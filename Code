-- TASK 1
SELECT 
        id,
        COALESCE(location, 'Unknown') AS location,
        CASE WHEN total_rooms >= 1 AND total_rooms <= 400 THEN total_rooms ELSE 100 END AS total_rooms,
        COALESCE(staff_count, (total_rooms * 1.5)) AS staff_count,
        CASE WHEN opening_date = '-' OR opening_date IS NULL THEN '2023' 
          WHEN opening_date >= '2000' AND opening_date <= '2023' THEN opening_date ELSE opening_date END AS opening_date,
        CASE WHEN LOWER(target_guests) LIKE 'b%' THEN 'Business'
          WHEN target_guests IS NULL OR target_guests = '-' THEN 'Leisure' ELSE target_guests END AS target_guests
FROM public.branch;


-- TASK 2
SELECT
        service_id,
        branch_id,
        ROUND(AVG(time_taken), 2) AS avg_time_taken,
        MAX(time_taken) AS max_time_taken
FROM public.request
GROUP BY service_id, branch_id;


-- TASK 3
SELECT 
        s.description,
        r.branch_id,
        b.location,
        r.id AS request_id,
        r.rating
FROM public.request AS r
INNER JOIN public.branch AS b 
	ON r.branch_id= b.id
INNER JOIN public.service AS s 
	ON r.service_id = s.id
WHERE b.location IN ('EMEA', 'LATAM') 
	AND s.description IN ('Meal', 'Laundry');


-- TASK 4
SELECT 
        service_id,
        branch_id,
        ROUND(AVG(rating), 2) AS avg_rating
FROM public.request
GROUP BY service_id, branch_id
HAVING AVG(rating) < 4.5;
